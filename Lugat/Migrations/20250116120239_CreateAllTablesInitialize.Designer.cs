// <auto-generated />
using Lugat.Brokers.Storages;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lugat.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20250116120239_CreateAllTablesInitialize")]
    partial class CreateAllTablesInitialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Lugat.Models.Foundations.Bolims.Bolim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SectionPicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Bolimlar");
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Words.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BolimId")
                        .HasColumnType("int");

                    b.Property<string>("English")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnglishTrans")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExampleEng")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ExampleUz")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uzbek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WordPicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BolimId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Bolims.Bolim", b =>
                {
                    b.HasOne("Lugat.Models.Foundations.Categories.Category", null)
                        .WithMany("Bolimlar")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Words.Word", b =>
                {
                    b.HasOne("Lugat.Models.Foundations.Bolims.Bolim", null)
                        .WithMany("Words")
                        .HasForeignKey("BolimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Bolims.Bolim", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("Lugat.Models.Foundations.Categories.Category", b =>
                {
                    b.Navigation("Bolimlar");
                });
#pragma warning restore 612, 618
        }
    }
}
